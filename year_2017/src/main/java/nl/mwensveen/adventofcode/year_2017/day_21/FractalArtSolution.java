package nl.mwensveen.adventofcode.year_2017.day_21;

public class FractalArtSolution {
    public static void main(String[] args) {
        FractalArt fractalArt = new FractalArt(getInput());
        System.out.println("Part 1: " + fractalArt.calculate(5));
        fractalArt = new FractalArt(getInput());
        System.out.println("Part 2: " + fractalArt.calculate(18));
    }

    private static String getInput() {
        return "../.. => ###/.#./.##\n" +
                "#./.. => .../###/#.#\n" +
                "##/.. => #.#/..#/..#\n" +
                ".#/#. => ##./.##/..#\n" +
                "##/#. => ###/.../###\n" +
                "##/## => ###/##./.#.\n" +
                ".../.../... => .#../..##/...#/....\n" +
                "#../.../... => .#../..##/.##./####\n" +
                ".#./.../... => .#../###./.#../#..#\n" +
                "##./.../... => #.##/#..#/...#/.#..\n" +
                "#.#/.../... => ##.#/.#.#/#.#./..##\n" +
                "###/.../... => #..#/#.##/..../#.##\n" +
                ".#./#../... => .#.#/.#../..../.#.#\n" +
                "##./#../... => ###./..../.##./###.\n" +
                "..#/#../... => .#../###./####/.#..\n" +
                "#.#/#../... => ..##/.#../#.#./##.#\n" +
                ".##/#../... => #..#/##../.###/#...\n" +
                "###/#../... => #.##/##../.#.#/####\n" +
                ".../.#./... => ####/.###/..#./###.\n" +
                "#../.#./... => ###./..../#.../#...\n" +
                ".#./.#./... => .#../###./.#.#/....\n" +
                "##./.#./... => #.##/#..#/.#.#/##..\n" +
                "#.#/.#./... => #.../..../##../....\n" +
                "###/.#./... => ..../...#/##../####\n" +
                ".#./##./... => ..../.###/.#.#/#...\n" +
                "##./##./... => ..##/.##./###./#.##\n" +
                "..#/##./... => ...#/#.#./#.#./#..#\n" +
                "#.#/##./... => ..##/###./#.##/..#.\n" +
                ".##/##./... => .###/..../##../#.##\n" +
                "###/##./... => .#../...#/..##/##..\n" +
                ".../#.#/... => ...#/#.##/#.../####\n" +
                "#../#.#/... => .##./.#../###./.###\n" +
                ".#./#.#/... => ##.#/.#.#/#.../.##.\n" +
                "##./#.#/... => ####/#..#/..#./....\n" +
                "#.#/#.#/... => #.##/.##./####/.#..\n" +
                "###/#.#/... => ..##/..#./#..#/.#..\n" +
                ".../###/... => #..#/#.../.##./.##.\n" +
                "#../###/... => ##../###./#.##/####\n" +
                ".#./###/... => .#../..##/#..#/...#\n" +
                "##./###/... => ..#./#..#/.###/..#.\n" +
                "#.#/###/... => #..#/#.#./#.#./#.##\n" +
                "###/###/... => #.../.##./..../.##.\n" +
                "..#/.../#.. => .###/.##./.##./#.##\n" +
                "#.#/.../#.. => #.../..#./.###/...#\n" +
                ".##/.../#.. => #..#/..../.##./.#.#\n" +
                "###/.../#.. => .##./##.#/.#.#/##..\n" +
                ".##/#../#.. => ...#/#.##/.#../.#..\n" +
                "###/#../#.. => ##.#/#.#./#.../##..\n" +
                "..#/.#./#.. => .#../#.../#.../####\n" +
                "#.#/.#./#.. => .##./.##./#.##/.#.#\n" +
                ".##/.#./#.. => ##../.#.#/#.../.#..\n" +
                "###/.#./#.. => ..#./.#../..#./.###\n" +
                ".##/##./#.. => #.../#..#/..##/###.\n" +
                "###/##./#.. => ..../#..#/.#../####\n" +
                "#../..#/#.. => ..#./#.#./####/#...\n" +
                ".#./..#/#.. => .##./.###/#.../#.#.\n" +
                "##./..#/#.. => ##../.#.#/...#/#.##\n" +
                "#.#/..#/#.. => ####/###./##.#/...#\n" +
                ".##/..#/#.. => ##.#/###./#..#/###.\n" +
                "###/..#/#.. => .###/#..#/...#/.#.#\n" +
                "#../#.#/#.. => ##../##../#.../##.#\n" +
                ".#./#.#/#.. => #.../.###/...#/..#.\n" +
                "##./#.#/#.. => .#../..../#..#/..##\n" +
                "..#/#.#/#.. => ##../##.#/..#./#..#\n" +
                "#.#/#.#/#.. => .#../###./#.##/#.##\n" +
                ".##/#.#/#.. => ..../..#./#..#/####\n" +
                "###/#.#/#.. => ####/.#.#/...#/###.\n" +
                "#../.##/#.. => .#.#/#.##/##.#/.###\n" +
                ".#./.##/#.. => ##.#/#.#./.#.#/.##.\n" +
                "##./.##/#.. => .##./#.#./..../.#..\n" +
                "#.#/.##/#.. => ###./.#../#.../....\n" +
                ".##/.##/#.. => #.##/##../#.##/...#\n" +
                "###/.##/#.. => .##./..../...#/##..\n" +
                "#../###/#.. => #..#/#..#/#..#/####\n" +
                ".#./###/#.. => .#.#/#.#./.#.#/####\n" +
                "##./###/#.. => ##../#.#./#..#/....\n" +
                "..#/###/#.. => .##./##../..../###.\n" +
                "#.#/###/#.. => ..##/#.../#.../#.#.\n" +
                ".##/###/#.. => ..##/##.#/#.##/#.##\n" +
                "###/###/#.. => .#.#/..##/###./.#..\n" +
                ".#./#.#/.#. => ..../.#../.###/.#..\n" +
                "##./#.#/.#. => ...#/#.../.#.#/...#\n" +
                "#.#/#.#/.#. => ..../..##/..../.#..\n" +
                "###/#.#/.#. => #.#./#.##/##../###.\n" +
                ".#./###/.#. => #.##/..#./.#../###.\n" +
                "##./###/.#. => .#../..##/...#/#.#.\n" +
                "#.#/###/.#. => #.../...#/###./#...\n" +
                "###/###/.#. => ..##/##.#/..#./#.#.\n" +
                "#.#/..#/##. => .#.#/#.#./####/..#.\n" +
                "###/..#/##. => #..#/##.#/..../#...\n" +
                ".##/#.#/##. => #..#/...#/#.##/.#..\n" +
                "###/#.#/##. => .#.#/###./#.../#.##\n" +
                "#.#/.##/##. => .#../#.#./.#../..#.\n" +
                "###/.##/##. => ..#./##../##../.###\n" +
                ".##/###/##. => .###/#.##/##../.##.\n" +
                "###/###/##. => ..##/#.../.#.#/..##\n" +
                "#.#/.../#.# => .#../.#../##.#/.##.\n" +
                "###/.../#.# => .#.#/...#/.#../#.#.\n" +
                "###/#../#.# => ...#/#..#/..#./.###\n" +
                "#.#/.#./#.# => ##../##.#/####/...#\n" +
                "###/.#./#.# => .#.#/...#/..#./#..#\n" +
                "###/##./#.# => .###/##.#/.#../#.##\n" +
                "#.#/#.#/#.# => #.../#.../.#.#/...#\n" +
                "###/#.#/#.# => .#../#.#./##.#/..#.\n" +
                "#.#/###/#.# => .###/#..#/####/####\n" +
                "###/###/#.# => ####/#..#/.##./#...\n" +
                "###/#.#/### => #.#./..##/#.../#.#.\n" +
                "###/###/### => .###/.##./#.#./...#";
    }
}
